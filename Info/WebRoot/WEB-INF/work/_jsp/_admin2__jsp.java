/*
 * JSP generated by Resin-3.0.21 (built Thu, 10 Aug 2006 12:03:19 PDT)
 */

package _jsp;
import javax.servlet.*;
import javax.servlet.jsp.*;
import javax.servlet.http.*;
import java.util.*;
import java.io.*;
import java.nio.*;
import java.nio.channels.*;

public class _admin2__jsp extends com.caucho.jsp.JavaPage{
  private boolean _caucho_isDead;

  
  public String pathConvert(String path) {
  	
  	
  	String sRet = path.replace('\\', '/');
  	File file = new File(path);
  	
  	if (file.getParent() != null) {
  		if (file.isDirectory()) {
  			if (! sRet.endsWith("/"))
  				sRet += "/";
  		}
  	} else {
  		if (! sRet.endsWith("/"))
  			sRet += "/";	
  	}
  	
  	return sRet;
  }
  
  /**
   * \u8bfb\u53d6\u6587\u672c\u6570\u636e,\u6bcf\u8bfb\u4e00\u884c\u5728\u540e\u9762\u52a0\n
   * @param filename
   * @param encode \u6587\u5b57\u7f16\u7801
   * @return
   */
  public static String read(String filename,String encode) {
  	File ft = new File(filename);
  	StringBuffer sb = new StringBuffer();
  	try {
  		InputStream is = new FileInputStream(ft);
  		BufferedReader in = new BufferedReader(new InputStreamReader(is,encode));
  		String aline = "";
  		while (null != (aline = in.readLine())) {
  			sb.append(aline + "\n");
  		}
  		is.close();
  	}
  	catch (IOException e) {
  		e.printStackTrace();
  	}
  	return sb.toString();
  }
  
  public static String tailFile(String fileName,long readSize,String encode)
  {
  	StringBuffer sb=new StringBuffer();
  	try {
  		
  		RandomAccessFile out = new RandomAccessFile(fileName, "r");
  		
  		long start =0;
  		if(out.length()>readSize)
  		{
  			start =out.length()-readSize;
  		}
  		else
  		{
  			readSize=out.length();
  		}
  		MappedByteBuffer  mb =out.getChannel().map(FileChannel.MapMode.READ_ONLY,start, readSize);
  		
  		int foot=0;
  		int byteSize =1024;
  		byte[] b =new byte[byteSize];
  		while(mb.hasRemaining())
  		{
  			
  			if(foot>byteSize-1)
  			{
  				sb.append(new String(b,encode));
  				
  				foot =0;
  			}
  			b[foot++]=mb.get();
  		}
  		if(foot>0)
  		{
  			byte [] tb=new byte[foot];
  			for(int i=0;i<foot;i++)
  			{
  				tb[i]=b[i];
  			}
  			sb.append(new String(tb,encode));
  		}
  		
  	} catch (FileNotFoundException e) {
  		System.out.println(" \u6ca1\u6709\u627e\u5230\u6587\u4ef6");
  		e.printStackTrace();
  	} catch (IOException e) {
  		e.printStackTrace();
  	}
  	
  	return sb.toString();
  
  }
  

  
  public void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response)
    throws java.io.IOException, javax.servlet.ServletException
  {
    javax.servlet.http.HttpSession session = request.getSession(true);
    com.caucho.server.webapp.Application _jsp_application = _caucho_getApplication();
    javax.servlet.ServletContext application = _jsp_application;
    com.caucho.jsp.PageContextImpl pageContext = com.caucho.jsp.QJspFactory.allocatePageContext(this, _jsp_application, request, response, null, session, 8192, true, false);
    javax.servlet.jsp.JspWriter out = pageContext.getOut();
    javax.servlet.ServletConfig config = getServletConfig();
    javax.servlet.Servlet page = this;
    response.setContentType("text/html; charset=UTF-8");
    request.setCharacterEncoding("UTF-8");
    try {
      out.write(_jsp_string0, 0, _jsp_string0.length);
      


   
	String actionUrl =request.getRequestURI();
	String  curPath="";
	if(request.getParameter("curPath")==null)
	{
		curPath = request.getRealPath(request.getServletPath());
	}
	else{
		curPath =request.getParameter("curPath");
	}
	
	String type =request.getParameter("type");
	String curFileContent="";
	if(!"".equals(type)&&null!=type)
	{
		if(type.equals("openFile"))
		{
			curFileContent=read(curPath,"utf-8");
		}
		if(type.equals("tailFile"))
		{
			curFileContent=tailFile(curPath,102400l,"utf-8");
		}
		
	}

	boolean isRoot = curPath.equals("");
	
	File curFile = new File(curPath);
	
	
	
    
    
    
    String parenPath=curFile.getParent() == null?"":pathConvert(curFile.getParent());
    


      out.write(_jsp_string1, 0, _jsp_string1.length);
      out.println(actionUrl+"?curPath="+parenPath);
      out.write(_jsp_string2, 0, _jsp_string2.length);
      
     	out.println("is root ="+isRoot+"<br>");
     	out.println("current Uri ="+request.getRequestURI()+"<br>");
     	
     	out.println("current path is :"+curPath+"<br>");
     	File[] subFiles ;
     	if(isRoot==true)
     	{
     		subFiles=File.listRoots();
     	
     	}else
     	{
    		subFiles =curFile.listFiles();
     	}
     		
   		if(null!=subFiles&&subFiles.length>0)
       	{
   			
   				for(File f:subFiles)
           		{
   					
   					if(isRoot==false)
   	     			{
   						
            			if(f.isDirectory())
            			{
            				out.println("<a href=\""+actionUrl+"?curPath="+f.getPath()+"\">"+f.getName()+"<a><br>");
            			}
            			else{
            				
      out.write(_jsp_string3, 0, _jsp_string3.length);
      out.print((actionUrl));
      out.write(_jsp_string4, 0, _jsp_string4.length);
      out.print((f.getPath()));
      out.write(_jsp_string5, 0, _jsp_string5.length);
      out.print((f.getName()));
      out.write(_jsp_string6, 0, _jsp_string6.length);
      out.print((actionUrl));
      out.write(_jsp_string7, 0, _jsp_string7.length);
      out.print((f.getPath()));
      out.write(_jsp_string5, 0, _jsp_string5.length);
      out.print((f.getName()));
      out.write(_jsp_string8, 0, _jsp_string8.length);
      out.print((f.length()/(1024*1024) ));
      out.write(_jsp_string9, 0, _jsp_string9.length);
      
            				
            				//
            		
            			}
   	     			}
   					else
   					{
   						
   						out.println("<a href=\""+actionUrl+"?curPath="+f.getPath()+"\">"+pathConvert(f.getPath())+"<a><br>");
   					}
           		}
       		
       	}
     
     	
     	
     	
     
      out.write(_jsp_string10, 0, _jsp_string10.length);
      out.print((curFileContent ));
      out.write(_jsp_string11, 0, _jsp_string11.length);
    } catch (java.lang.Throwable _jsp_e) {
      pageContext.handlePageException(_jsp_e);
    } finally {
      com.caucho.jsp.QJspFactory.freePageContext(pageContext);
    }
  }

  private java.util.ArrayList _caucho_depends = new java.util.ArrayList();

  public java.util.ArrayList _caucho_getDependList()
  {
    return _caucho_depends;
  }

  public void _caucho_addDepend(com.caucho.make.PersistentDependency depend)
  {
    super._caucho_addDepend(depend);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
  }

  public boolean _caucho_isModified()
  {
    if (_caucho_isDead)
      return true;
    if (com.caucho.util.CauchoSystem.getVersionId() != -6418134904411496499L)
      return true;
    for (int i = _caucho_depends.size() - 1; i >= 0; i--) {
      com.caucho.make.Dependency depend;
      depend = (com.caucho.make.Dependency) _caucho_depends.get(i);
      if (depend.isModified())
        return true;
    }
    return false;
  }

  public long _caucho_lastModified()
  {
    return 0;
  }

  public void destroy()
  {
      _caucho_isDead = true;
      super.destroy();
  }

  public void init(com.caucho.vfs.Path appDir)
    throws javax.servlet.ServletException
  {
    com.caucho.vfs.Path resinHome = com.caucho.util.CauchoSystem.getResinHome();
    com.caucho.vfs.MergePath mergePath = new com.caucho.vfs.MergePath();
    mergePath.addMergePath(appDir);
    mergePath.addMergePath(resinHome);
    com.caucho.loader.DynamicClassLoader loader;
    loader = (com.caucho.loader.DynamicClassLoader) getClass().getClassLoader();
    String resourcePath = loader.getResourcePathSpecificFirst();
    mergePath.addClassPath(resourcePath);
    com.caucho.vfs.Depend depend;
    depend = new com.caucho.vfs.Depend(appDir.lookup("admin2.jsp"), -7330499832030421278L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
  }

  private final static char []_jsp_string9;
  private final static char []_jsp_string3;
  private final static char []_jsp_string6;
  private final static char []_jsp_string10;
  private final static char []_jsp_string7;
  private final static char []_jsp_string8;
  private final static char []_jsp_string11;
  private final static char []_jsp_string4;
  private final static char []_jsp_string1;
  private final static char []_jsp_string5;
  private final static char []_jsp_string2;
  private final static char []_jsp_string0;
  static {
    _jsp_string9 = "M\r\n            					<br></br>\r\n            				".toCharArray();
    _jsp_string3 = "\r\n            					\r\n            					<a href=\"".toCharArray();
    _jsp_string6 = " </a>,\r\n            					BigFileUse:<a href=\"".toCharArray();
    _jsp_string10 = "\r\n  	 \r\n</form>\r\n</div>\r\n\r\n<div>\r\n<font color=\"red\"> \u5f53\u524d\u6587\u4ef6\u7684\u5185\u5bb9\uff1a</font>\r\n<XMP> \r\n\r\n	".toCharArray();
    _jsp_string7 = "?type=tailFile&curPath=".toCharArray();
    _jsp_string8 = " </a>,\r\n            					size =".toCharArray();
    _jsp_string11 = "\r\n	</XMP>\r\n</div>\r\n\r\n\r\n</body>\r\n</html>".toCharArray();
    _jsp_string4 = "?type=openFile&curPath=".toCharArray();
    _jsp_string1 = "\r\n\r\n\r\n<a href =\"".toCharArray();
    _jsp_string5 = "\">".toCharArray();
    _jsp_string2 = "\">\u4e0a\u7ea7\u76ee\u5f55</a><br></br>\r\n<div id =\"listFiles\" >\r\n<form id=\"listFiles\" name =\"listFiles\" action=\"\">\r\n	\r\n  	\r\n  	 \r\n     ".toCharArray();
    _jsp_string0 = "\r\n\r\n    \r\n<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n\r\n<html>\r\n<head>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\r\n<title>Insert title here</title>\r\n</head>\r\n<body>\r\n\r\n\r\n\r\n\r\n".toCharArray();
  }
}
